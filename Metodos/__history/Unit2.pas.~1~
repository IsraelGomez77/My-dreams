unit Unit2;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Grids, ExtCtrls, math;

type
  TForm2 = class(TForm)
    Edit1: TEdit;
    GroupBox1: TGroupBox;
    Radio1: TRadioButton;
    Radio2: TRadioButton;
    Grid1: TStringGrid;
    Grid2: TStringGrid;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    Panel1: TPanel;
    Panel2: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Button5: TButton;
    Button6: TButton;
    Panel3: TPanel;
    Grid3: TStringGrid;
    Panel4: TPanel;
    Grid4: TStringGrid;
    Label3: TLabel;
    Edit2: TEdit;
    Label4: TLabel;
    Label5: TLabel;
    Edit3: TEdit;
    procedure Button6Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.dfm}

procedure TForm2.Button1Click(Sender: TObject);
begin

grid1.RowCount:= grid1.RowCount+1;

end;

procedure TForm2.Button2Click(Sender: TObject);
begin
grid1.RowCount:= grid1.RowCount-1;
end;

procedure TForm2.Button3Click(Sender: TObject);
begin
grid2.RowCount:= grid2.RowCount+1;
end;

procedure TForm2.Button4Click(Sender: TObject);
begin
grid2.RowCount:= grid2.RowCount-1;
end;

procedure TForm2.Button5Click(Sender: TObject);
begin
if (radio1.Checked=true) then
   begin
     panel1.Visible:=true;
     panel2.Visible:=true;
   end;
  if (radio2.Checked=true) then
   begin
     panel1.Visible:=true;
     panel2.Visible:=false;
end;
end;


procedure TForm2.Button6Click(Sender: TObject);

var
i:Integer;
xp,yp:Real;
Fden,FNum,Dden,DNum,DenCuad,derivada:Real;

begin
  xp:= strtofloat(edit3.Text);
if(radio1.Checked=true)then
begin
//Calcula derivada del numerador
grid3.RowCount:=grid1.RowCount;
for I := 0 to grid1.RowCount - 1 do
     begin
  grid3.Cells[0,i]:=inttostr(strtoint(grid1.Cells[0,i])*strtoint(grid1.Cells[1,i]));
  grid3.Cells[1,i]:=inttostr(strtoint(grid1.Cells[1,i])-1);

     end;
     //Calcula derivada del numerador
 grid4.RowCount:=grid2.RowCount;
for I := 0 to grid2.RowCount - 1 do
     begin
  grid4.Cells[0,i]:=inttostr(strtoint(grid2.Cells[0,i])*strtoint(grid2.Cells[1,i]));
  grid4.Cells[1,i]:=inttostr(strtoint(grid2.Cells[1,i])-1);

     end;

      //Calcula valor de la función del numerador evaluada en 1


  yp:=0 ;
  for i := 0 to grid1.RowCount - 1 do
begin
yp:=yp+ strtofloat(grid1.Cells[0,i])*power(xp,strtofloat(grid1.Cells[1,i]) );
end;

FNum:= yp;

     //Calcula valor de la función del denominador evaluada en 1


  yp:=0 ;
  for i := 0 to grid2.RowCount - 1 do
begin
yp:=yp+ strtofloat(grid2.Cells[0,i])*power(xp,strtofloat(grid2.Cells[1,i]) );
end;

Fden:= yp;

 //Calcula valor de la derivada del numerador evaluada 1

  yp:=0 ;
  for i := 0 to grid3.RowCount - 1 do
begin
yp:=yp+ strtofloat(grid3.Cells[0,i])*power(xp,strtofloat(grid3.Cells[1,i]) );
end;
DNum:= yp;

//Calcula valor de la derivada del deniminador evaluada 1

  yp:=0 ;
  for i := 0 to grid4.RowCount - 1 do
begin
yp:=yp+ strtofloat(grid4.Cells[0,i])*power(xp,strtofloat(grid4.Cells[1,i]) );
end;

Dden:= yp;

//Calcula el denominador al cuadrado

   DenCuad:=power(Fden,2);


   //Hasta que se hizo la derivada

   derivada:=abs((Fden*DNum- FNum*Dden)/DenCuad);
   edit2.Text:=floattostr(derivada) ;

   if (derivada<1) then
   begin
     label4.Caption:='La función g(x) propuesta promete convergencia ';
     end
     else
     begin
       label4.Caption:='La función g(x) propuesta NO promete convergencia ';
     end;
   end;    //termina if

   if radio2.Checked=true then
   begin
        grid3.RowCount:=grid1.RowCount;
for I := 0 to grid1.RowCount - 1 do
     begin
  grid3.Cells[0,i]:=inttostr(strtoint(grid1.Cells[0,i])*strtoint(grid1.Cells[1,i]));
  grid3.Cells[1,i]:=inttostr(strtoint(grid1.Cells[1,i])-1);

     end;

     //Calcula valor de la derivada del numerador evaluada 1

  yp:=0 ;
  for i := 0 to grid3.RowCount - 1 do
begin
yp:=yp+ strtofloat(grid3.Cells[0,i])*power(xp,strtofloat(grid3.Cells[1,i]) );
end;
DNum:= yp;

       //Hasta que se hizo la derivada

   derivada:=DNum;
   edit2.Text:=floattostr(derivada) ;

   if (derivada<1) then
   begin
     label4.Caption:='La función g(x) propuesta promete convergencia ';
     end
     else
     begin
       label4.Caption:='La función g(x) propuesta NO promete convergencia ';
     end;
   end;     //termina radio 2
   
end;
end.
